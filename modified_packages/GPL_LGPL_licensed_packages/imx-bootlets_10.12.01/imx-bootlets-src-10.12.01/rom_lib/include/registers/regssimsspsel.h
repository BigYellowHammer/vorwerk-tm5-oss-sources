/*
 *
 * Filename: ./regssimsspsel.h
 *
 * Description: PIO Registers for SIMSSPSEL interface
 *
 * Xml Revision: 1.0
 *
 * Template revision: 20911
 *
 *
 *
 * Copyright (C) Freescale Semiconductor Unpublished
 *
 * Freescale Semiconductor
 * Proprietary & Confidential
 *
 * This source code and the algorithms implemented therein constitute
 * confidential information and may compromise trade secrets of SigmaTel, Inc.
 * or its associates, and any unauthorized use thereof is prohibited.
 *
 *
 *
 * WARNING!  THIS FILE IS AUTOMATICALLY GENERATED FROM XML.
 *                DO NOT MODIFY THIS FILE DIRECTLY.
 *
 *
 *
 * The following naming conventions are followed in this file.
 *      XX_<module>_<regname>_<field>
 *
 * XX specifies the define / macro class
 *      HW pertains to a register
 *      BM indicates a Bit Mask
 *      BF indicates a Bit Field macro
 *
 * <module> is the hardware module name which can be any of the following...
 *      USB20 (Note when there is more than one copy of a given module, the
 *      module name includes a number starting from 0 for the first instance
 *      of that module)
 *
 * <regname> is the specific register within that module
 *
 * <field> is the specific bitfield within that <module>_<register>
 *
 * We also define the following...
 *      hw_<module>_<regname>_t is typedef of anonymous union
 *
 */

#ifndef _SIMSSPSEL_H
#define _SIMSSPSEL_H  1

#include "regs.h"

#ifndef REGS_SIMSSPSEL_BASE
#define REGS_SIMSSPSEL_BASE (REGS_BASE + 0x3c300L)
#endif

/*
 * HW_SIMSSPSEL_CTRL - SIMSSPSEL configuration register
 */
#ifndef __LANGUAGE_ASM__
typedef union
{
    reg32_t  U;
    struct
    {
        unsigned SSP0_MODEL_SEL  :  5;
        unsigned RSVD1           :  9;
        unsigned SSP0_BUS_WIDTH  :  2;
        unsigned SSP1_MODEL_SEL  :  5;
        unsigned RSVD0           :  9;
        unsigned SSP1_BUS_WIDTH  :  2;
    } B;
} hw_simsspsel_ctrl_t;
#endif

/*
 * constants & macros for entire HW_SIMSSPSEL_CTRL register
 */
#define HW_SIMSSPSEL_CTRL_ADDR      (0x8003c300)

#ifndef __LANGUAGE_ASM__
#define HW_SIMSSPSEL_CTRL           (*(volatile hw_simsspsel_ctrl_t *) HW_SIMSSPSEL_CTRL_ADDR)
#define HW_SIMSSPSEL_CTRL_RD()      (HW_SIMSSPSEL_CTRL.U)
#define HW_SIMSSPSEL_CTRL_WR(v)     (HW_SIMSSPSEL_CTRL.U = (v))
#define HW_SIMSSPSEL_CTRL_SET(v)    (HW_SIMSSPSEL_CTRL_WR(HW_SIMSSPSEL_CTRL_RD() |  (v)))
#define HW_SIMSSPSEL_CTRL_CLR(v)    (HW_SIMSSPSEL_CTRL_WR(HW_SIMSSPSEL_CTRL_RD() & ~(v)))
#define HW_SIMSSPSEL_CTRL_TOG(v)    (HW_SIMSSPSEL_CTRL_WR(HW_SIMSSPSEL_CTRL_RD() ^  (v)))
#endif


/*
 * constants & macros for individual HW_SIMSSPSEL_CTRL bitfields
 */
/* --- Register HW_SIMSSPSEL_CTRL, field SSP1_BUS_WIDTH */

#define BP_SIMSSPSEL_CTRL_SSP1_BUS_WIDTH      30
#define BM_SIMSSPSEL_CTRL_SSP1_BUS_WIDTH      0xC0000000

#ifndef __LANGUAGE_ASM__
#define BF_SIMSSPSEL_CTRL_SSP1_BUS_WIDTH(v)   ((((reg32_t) v) << 30) & BM_SIMSSPSEL_CTRL_SSP1_BUS_WIDTH)
#else
#define BF_SIMSSPSEL_CTRL_SSP1_BUS_WIDTH(v)   (((v) << 30) & BM_SIMSSPSEL_CTRL_SSP1_BUS_WIDTH)
#endif
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL_SSP1_BUS_WIDTH(v)   BF_CS1(SIMSSPSEL_CTRL, SSP1_BUS_WIDTH, v)
#endif

/* --- Register HW_SIMSSPSEL_CTRL, field SSP1_MODEL_SEL */

#define BP_SIMSSPSEL_CTRL_SSP1_MODEL_SEL      16
#define BM_SIMSSPSEL_CTRL_SSP1_MODEL_SEL      0x001F0000

#define BF_SIMSSPSEL_CTRL_SSP1_MODEL_SEL(v)   (((v) << 16) & BM_SIMSSPSEL_CTRL_SSP1_MODEL_SEL)
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL_SSP1_MODEL_SEL(v)   BF_CS1(SIMSSPSEL_CTRL, SSP1_MODEL_SEL, v)
#endif

#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__STUB              0x0
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SPI_slave         0x1
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SPI_MASTER        0x2
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SPI_Serial_Flash  0x3
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SPI_Serial_Flash  0x4
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__MMC_Verilog       0x5
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SD                0x6
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SD                0x7
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SD_SDIO_COMBO     0x8
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SDIO              0x9
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__MemStick          0xa
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__MemStickPro       0xb
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__MicroWire_Slave   0xc
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__MicroWire_Master  0xd
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SSI_Receive       0xe
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SSI_Xmitter       0xf
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__SPI_CrossOver     0x10
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__CE_ATA            0x11
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__MMC_Denali        0x12
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__Winbond_flash     0x13
#define BV_SIMSSPSEL_CTRL_SSP1_MODEL_SEL__EMMC_DENALI       0x14

/* --- Register HW_SIMSSPSEL_CTRL, field SSP0_BUS_WIDTH */

#define BP_SIMSSPSEL_CTRL_SSP0_BUS_WIDTH      14
#define BM_SIMSSPSEL_CTRL_SSP0_BUS_WIDTH      0x0000C000

#define BF_SIMSSPSEL_CTRL_SSP0_BUS_WIDTH(v)   (((v) << 14) & BM_SIMSSPSEL_CTRL_SSP0_BUS_WIDTH)
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL_SSP0_BUS_WIDTH(v)   BF_CS1(SIMSSPSEL_CTRL, SSP0_BUS_WIDTH, v)
#endif

/* --- Register HW_SIMSSPSEL_CTRL, field SSP0_MODEL_SEL */

#define BP_SIMSSPSEL_CTRL_SSP0_MODEL_SEL      0
#define BM_SIMSSPSEL_CTRL_SSP0_MODEL_SEL      0x0000001F

#define BF_SIMSSPSEL_CTRL_SSP0_MODEL_SEL(v)   (((v) << 0) & BM_SIMSSPSEL_CTRL_SSP0_MODEL_SEL)
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL_SSP0_MODEL_SEL(v)   BF_CS1(SIMSSPSEL_CTRL, SSP0_MODEL_SEL, v)
#endif

#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__STUB              0x0
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SPI_slave         0x1
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SPI_MASTER        0x2
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SPI_Serial_Flash  0x3
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SPI_Serial_Flash  0x4
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__MMC_Verilog       0x5
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SD                0x6
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SD                0x7
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SD_SDIO_COMBO     0x8
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SDIO              0x9
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__MemStick          0xa
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__MemStickPro       0xb
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__MicroWire_Slave   0xc
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__MicroWire_Master  0xd
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SSI_Receive       0xe
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SSI_Xmitter       0xf
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__SPI_CrossOver     0x10
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__CE_ATA            0x11
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__MMC_Denali        0x12
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__Winbond_flash     0x13
#define BV_SIMSSPSEL_CTRL_SSP0_MODEL_SEL__EMMC_DENALI       0x14



/*
 * HW_SIMSSPSEL_CTRL1 - SIMSSPSEL configuration register
 */
#ifndef __LANGUAGE_ASM__
typedef union
{
    reg32_t  U;
    struct
    {
        unsigned SSP2_MODEL_SEL  :  5;
        unsigned RSVD1           :  9;
        unsigned SSP2_BUS_WIDTH  :  2;
        unsigned SSP3_MODEL_SEL  :  5;
        unsigned RSVD0           :  9;
        unsigned SSP3_BUS_WIDTH  :  2;
    } B;
} hw_simsspsel_ctrl1_t;
#endif

/*
 * constants & macros for entire HW_SIMSSPSEL_CTRL1 register
 */
#define HW_SIMSSPSEL_CTRL1_ADDR      (0x8003c304)

#ifndef __LANGUAGE_ASM__
#define HW_SIMSSPSEL_CTRL1           (*(volatile hw_simsspsel_ctrl1_t *) HW_SIMSSPSEL_CTRL1_ADDR)
#define HW_SIMSSPSEL_CTRL1_RD()      (HW_SIMSSPSEL_CTRL1.U)
#define HW_SIMSSPSEL_CTRL1_WR(v)     (HW_SIMSSPSEL_CTRL1.U = (v))
#define HW_SIMSSPSEL_CTRL1_SET(v)    (HW_SIMSSPSEL_CTRL1_WR(HW_SIMSSPSEL_CTRL1_RD() |  (v)))
#define HW_SIMSSPSEL_CTRL1_CLR(v)    (HW_SIMSSPSEL_CTRL1_WR(HW_SIMSSPSEL_CTRL1_RD() & ~(v)))
#define HW_SIMSSPSEL_CTRL1_TOG(v)    (HW_SIMSSPSEL_CTRL1_WR(HW_SIMSSPSEL_CTRL1_RD() ^  (v)))
#endif


/*
 * constants & macros for individual HW_SIMSSPSEL_CTRL1 bitfields
 */
/* --- Register HW_SIMSSPSEL_CTRL1, field SSP3_BUS_WIDTH */

#define BP_SIMSSPSEL_CTRL1_SSP3_BUS_WIDTH      30
#define BM_SIMSSPSEL_CTRL1_SSP3_BUS_WIDTH      0xC0000000

#ifndef __LANGUAGE_ASM__
#define BF_SIMSSPSEL_CTRL1_SSP3_BUS_WIDTH(v)   ((((reg32_t) v) << 30) & BM_SIMSSPSEL_CTRL1_SSP3_BUS_WIDTH)
#else
#define BF_SIMSSPSEL_CTRL1_SSP3_BUS_WIDTH(v)   (((v) << 30) & BM_SIMSSPSEL_CTRL1_SSP3_BUS_WIDTH)
#endif
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL1_SSP3_BUS_WIDTH(v)   BF_CS1(SIMSSPSEL_CTRL1, SSP3_BUS_WIDTH, v)
#endif

/* --- Register HW_SIMSSPSEL_CTRL1, field SSP3_MODEL_SEL */

#define BP_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL      16
#define BM_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL      0x001F0000

#define BF_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL(v)   (((v) << 16) & BM_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL)
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL(v)   BF_CS1(SIMSSPSEL_CTRL1, SSP3_MODEL_SEL, v)
#endif

#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__STUB              0x0
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SPI_slave         0x1
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SPI_MASTER        0x2
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SPI_Serial_Flash  0x3
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SPI_Serial_Flash  0x4
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__MMC_Verilog       0x5
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SD                0x6
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SD                0x7
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SD_SDIO_COMBO     0x8
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SDIO              0x9
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__MemStick          0xa
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__MemStickPro       0xb
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__MicroWire_Slave   0xc
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__MicroWire_Master  0xd
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SSI_Receive       0xe
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SSI_Xmitter       0xf
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__SPI_CrossOver     0x10
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__CE_ATA            0x11
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__MMC_Denali        0x12
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__Winbond_flash     0x13
#define BV_SIMSSPSEL_CTRL1_SSP3_MODEL_SEL__EMMC_DENALI       0x14

/* --- Register HW_SIMSSPSEL_CTRL1, field SSP2_BUS_WIDTH */

#define BP_SIMSSPSEL_CTRL1_SSP2_BUS_WIDTH      14
#define BM_SIMSSPSEL_CTRL1_SSP2_BUS_WIDTH      0x0000C000

#define BF_SIMSSPSEL_CTRL1_SSP2_BUS_WIDTH(v)   (((v) << 14) & BM_SIMSSPSEL_CTRL1_SSP2_BUS_WIDTH)
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL1_SSP2_BUS_WIDTH(v)   BF_CS1(SIMSSPSEL_CTRL1, SSP2_BUS_WIDTH, v)
#endif

/* --- Register HW_SIMSSPSEL_CTRL1, field SSP2_MODEL_SEL */

#define BP_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL      0
#define BM_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL      0x0000001F

#define BF_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL(v)   (((v) << 0) & BM_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL)
#ifndef __LANGUAGE_ASM__
#define BW_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL(v)   BF_CS1(SIMSSPSEL_CTRL1, SSP2_MODEL_SEL, v)
#endif

#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__STUB              0x0
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SPI_slave         0x1
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SPI_MASTER        0x2
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SPI_Serial_Flash  0x3
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SPI_Serial_Flash  0x4
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__MMC_Verilog       0x5
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SD                0x6
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SD                0x7
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SD_SDIO_COMBO     0x8
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SDIO              0x9
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__MemStick          0xa
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__MemStickPro       0xb
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__MicroWire_Slave   0xc
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__MicroWire_Master  0xd
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SSI_Receive       0xe
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SSI_Xmitter       0xf
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__SPI_CrossOver     0x10
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__CE_ATA            0x11
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__MMC_Denali        0x12
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__Winbond_flash     0x13
#define BV_SIMSSPSEL_CTRL1_SSP2_MODEL_SEL__EMMC_DENALI       0x14


#endif /* _SIMSSPSEL_H */

////////////////////////////////////////////////////////////////////////////////
